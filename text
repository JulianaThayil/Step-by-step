firebase.initializeApp({
  apiKey: process.env.REACT_APP_API_KEY,
  authDomain: "step-by-step-96e75.firebaseapp.com"
})

//render
state = { isSignedIn: false }
  uiConfig = {
    signInFlow: "popup",
    signInOptions: [
      firebase.auth.GoogleAuthProvider.PROVIDER_ID
    ],
    callbacks: {
      signInSuccess: () => false
    }
  }
  componentDidMount = () => {
    firebase.auth().onAuthStateChanged(user => {
      this.setState({ isSignedIn: !!user })
      console.log("user", user)
    })
  }

return
  {this.state.isSignedIn ? (
   
     <MyProfile> </MyProfile>
      
      ) : (
          <StyledFirebaseAuth 
            uiConfig={this.uiConfig}
            firebaseAuth={firebase.auth()}
          />

          
        
          <MyButton tip="comments">
            <ChatIcon color="primary" />
          </MyButton>
          <span>{commentCount} comments</span>
          <CommentForm recipeId={recipeId} />
          <Comments comments={comments} />

          {
	"title":"a",
      "cookingTime": "3",
      "serves": "2",
      "body": "bjsjs",
      "ingredients": "nn",
      "intructions": "ffdf"
}

<MenuItem onClick={handleNotificationMenuOpen}>
        <IconButton aria-label="show new notifications" 
                  aria-controls="primary-search-account-menu-notification"
                  aria-haspopup="true"
        color="inherit">
          <BadgeContent> </BadgeContent>
        </IconButton>
        <p>Notifications</p>
      </MenuItem>
      
 ${not.recipient}/scream